<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Module on Lim's Blog</title><link>/tags/module/</link><description>Recent content in Module on Lim's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 08 May 2021 13:07:28 +0800</lastBuildDate><atom:link href="/tags/module/index.xml" rel="self" type="application/rss+xml"/><item><title>Caddy V2 Webhook 模块</title><link>/post/caddy-v2-module-webhook/</link><pubDate>Sat, 08 May 2021 13:07:28 +0800</pubDate><guid>/post/caddy-v2-module-webhook/</guid><description>介绍 项目地址：caddy-webhook
caddy-webhook 的流程分三步：
初始化时拉取仓库到指定的本地路径，如果本地路径上已经存在仓库，则用 fetch 更新并切换到设定的分支。 在仓库内执行用户设定的命令。 在用户设定的网址路径上监听 webhook 请求，收到正确的请求后更新仓库并重复第2步。 使用方法 现在支持的 webhook 类型：
github gitlanb gitee bitbucket gogs Caddyfile 格式 需要注意的是，webhook 这个 handler 需要放在 route，因为为了正确响应 webhook request，caddy-webhook 不会执行下一个 handler。
webhook [&amp;lt;repo&amp;gt; &amp;lt;path&amp;gt;] { repo &amp;lt;text&amp;gt; path &amp;lt;text&amp;gt; branch &amp;lt;text&amp;gt; depth &amp;lt;int&amp;gt; type &amp;lt;text&amp;gt; secret &amp;lt;text&amp;gt; command &amp;lt;text&amp;gt;... key &amp;lt;text&amp;gt; username &amp;lt;text&amp;gt; password &amp;lt;text&amp;gt; token &amp;lt;text&amp;gt; submodule } repo - git 仓库的远程地址，支持 http、https、ssh path - git 仓库的本地路径 branch - 分支名 depth - 拉取时的深度。默认值为 0 type - webhook 的类型。默认值为 github secret - 用户在 GitHub 等网站上设置的请求的密码，用于校验请求 submodule - 是否加载子模块 command - 要执行的命令 key - 使用 ssh 方法获取 git 仓库时需要的 key 文件路径 username - http 认证的用户名 password - http 认证的密码 token - GitHub 授权 Token 使用样例 Caddyfile</description></item><item><title>Linux Kernel 实践(二)：劫持系统调用</title><link>/post/linux-kernel-practice-hijack-syscall/</link><pubDate>Fri, 06 Mar 2020 23:17:11 +0800</pubDate><guid>/post/linux-kernel-practice-hijack-syscall/</guid><description>&lt;p>通过劫持系统调用表，将原有系统调用替换成自定义系统调用。&lt;/p></description></item><item><title>Linux Kernel 实践(一)：Hello LKM</title><link>/post/linux-kernel-practice-hello/</link><pubDate>Fri, 06 Mar 2020 18:18:09 +0800</pubDate><guid>/post/linux-kernel-practice-hello/</guid><description>&lt;p>实现一个简单的 Linux Kernel Module 并通过自定义参数输出信息。&lt;/p></description></item></channel></rss>