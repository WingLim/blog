<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker Image on 界限</title><link>https://blog.limx.dev/tags/docker-image/</link><description>Recent content in Docker Image on 界限</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 17 Apr 2021 15:00:52 +0800</lastBuildDate><atom:link href="https://blog.limx.dev/tags/docker-image/feed.xml" rel="self" type="application/rss+xml"/><item><title>使用 GiHub Actions 构建多架构 Docker 镜像</title><link>https://blog.limx.dev/post/build-docker-image-in-multi-archs-with-github-actions/</link><pubDate>Sat, 17 Apr 2021 15:00:52 +0800</pubDate><guid>https://blog.limx.dev/post/build-docker-image-in-multi-archs-with-github-actions/</guid><description>Docker为我们提供了一个一键式部署代码环境的方式，透过Docker Image我们可以不关心当前的操作系统的环境，只需要拉取镜像下来即可获得一致的运行环境。
但仍存在一个问题，如果你直接使用 docker build ，构建出来的镜像是基于你当前机器的CPU架构。当然，你也可以将代码和 Dockerfile 拉到虚拟机中进行构建，但这会花费很多时间。
通过 GitHub Actions，我们可以在 push 代码的时候，自动进行多架构的镜像构建，不再需要手动构建并推送到 Docker Hub 等镜像仓库中。
下面是一个示例：
这是我在 kea-dhcp4 中使用的 GitHub Actions 构建脚本的一部分
要推送到 DockerHub，则需要在 repo 的 sercrets 中设置 DockerHub 的用户名及 TOKEN
TOKEN 的生成参考：Managing access tokens
要推送到 GitHub 的镜像仓库，即 ghcr.io 中则需要设置 PAT(Personal Access Token)
CR_PAT 的生成参考：Migrating to GitHub Container Registry for Docker images
name:buildon:push:branches:[main ]paths-ignore:- &amp;#34;README.md&amp;#34;jobs:build:runs-on:ubuntu-lateststeps:-name:Checkoutuses:actions/checkout@v2-name:Set up QEMUuses:docker/setup-qemu-action@v1-name:Set up Docker Buildxuses:docker/setup-buildx-action@v1-name:Login to DockerHubuses:docker/login-action@v1with:username:${{ secrets.DOCKERHUB_USERNAME }}password:${{ secrets.DOCKERHUB_TOKEN }}-name:Login to GitHub Container Registryuses:docker/login-action@v1 # 在 sercrets 中设置 CR_PAT# with:registry:ghcr.</description></item></channel></rss>