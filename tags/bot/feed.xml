<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bot on 界限</title><link>https://blog.limx.dev/tags/bot/</link><description>Recent content in Bot on 界限</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 27 Oct 2021 15:07:15 +0800</lastBuildDate><atom:link href="https://blog.limx.dev/tags/bot/feed.xml" rel="self" type="application/rss+xml"/><item><title>在 Vercel 上部署 Telegram Bot（二）：通过与回复</title><link>https://blog.limx.dev/post/build-telegram-bot-in-vercel-respond-reply/</link><pubDate>Wed, 27 Oct 2021 15:07:15 +0800</pubDate><guid>https://blog.limx.dev/post/build-telegram-bot-in-vercel-respond-reply/</guid><description>在上一篇文章中我们讲了如何在 Vercel 上部署一个简单的 Telegram Bot，这里我们讲讲如何给 Bot 的消息添加可点击的按钮，以及通过回复 Bot 的消息来回复评论
Cusdis Webhook 首先我们先创建一个 api/hook/[chatId].ts 来处理 Cusdis 发送的 Webhook 请求
在 Vercel 中 [chatId].ts 可以对应路径 /api/hook/123456
这里隐去了一些类型定义，完整代码可以查看 api/hook/[chatId].ts
import { VercelRequest, VercelResponse } from &amp;#39;@vercel/node&amp;#39; import { InlineKeyboard } from &amp;#39;grammy&amp;#39; import { bot } from &amp;#39;../../index&amp;#39; // buildNewCommentMsg 构建发送给用户的通知消息 function buildNewCommentMsg(data: NewCommentHookData) { return `New comment on website &amp;lt;strong&amp;gt;${ data.project_title }&amp;lt;/strong&amp;gt; in page &amp;lt;strong&amp;gt;${data.page_title}&amp;lt;/strong&amp;gt;: &amp;lt;pre&amp;gt; ${data.content.replace(/&amp;lt;[^&amp;gt;]*&amp;gt;?/gm, &amp;#34;&amp;#34;)}&amp;lt;/pre&amp;gt; by: &amp;lt;strong&amp;gt;${data.by_nickname}&amp;lt;/strong&amp;gt;` } export default async (req: VercelRequest, res: VercelResponse) =&amp;gt; { if (req.</description></item><item><title>在 Vercel 上部署 Telegram Bot（一）：基本搭建</title><link>https://blog.limx.dev/post/build-telegram-bot-in-vercel-basic/</link><pubDate>Mon, 25 Oct 2021 14:47:30 +0800</pubDate><guid>https://blog.limx.dev/post/build-telegram-bot-in-vercel-basic/</guid><description>Telegram Bot 提供了另一种用户与服务交互的方式，通过与 Bot 的对话，按钮等方式来简化服务的执行
同时我们可以通过 Webhook 的方式将 Bot 后端部署在 Vercel 的 Serverless Function 上，来实现一个 Maintenance-free 的服务
这里以 cusdis-telegram-bot 为例，这是一个通知用户评论，并且可以在 Bot 中通过或回复评论的机器人
创建并设置 Bot 创建机器人十分简单，只需要四步
打开并启动 @BotFather 发送 /newbot 命令 输入机器人名称（相当于别名） 输入机器人用户名（相当于唯一标识符） 然后就会获取到 Bot 的密钥
初始化项目 安装 Vercel CLI
# 推荐使用 pnpm pnpm i -g vercel # 使用 npm npm i -g vercel # 使用 yarn yarn global add vercel 初始化项目并下载依赖
mkdir project-bot cd project-bot # Vercel 的类型库 pnpm i -D @vercel/node # 这是一个 Typescript 的 Telegram Bot 框架 pnpm i grammy 创建 Serverless Function Serverless Function 要在 api 目录下，文件名即对应路径</description></item></channel></rss>